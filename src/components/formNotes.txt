Standard Forms:

import React from "react"

export default function Form()
{
    const [firstName, setFirstName] = React.useState("")
    const [lastName, setLastName] = React.useState("")

    function handleChange() { //We don't get to decide what gets passed to this param, it's an event obj
        //event.target: gives the element that triggers the function 
        setFirstName(event.target.value);
    }

    function handleLastChange(){
        setLastName(event.target.value)
    }

    return (
        <form>
            <input type = "text" placeholder = "First Name" onChange={handleFirstChange}/>
            <input type = "text" placeholder = "Last Name" onChange={handleLastChange}/>
        </form>
    )
}

---------------------------------------------------------------------------------------
Forms State as Obj:
- Save state as an object for larger forms to avoid code redundancy.

export default function Form()
{
    const [formData, setFormData] = React.useState()
    {
        firstName: "",
        lastName: "",
        email: ""
    }

    function handleChange(){
        setFormData(prevFormData => {
            return(
                ...prevFormData,
                [event.target.name]: event.target.value
                //Replacing the property to what was inserted in the input.
            )
        })
    }

    return (
        <form>
            <input type = "text" placeholder = "First Name" onChange={handleChange} name = "firstName"/>
            <input type = "text" placeholder = "Last Name" onChange={handleChange} name = "lastName"/>
            <input type = "email" placeholder = "Email" onChange={handleChange} name = "email" />
        </form>
        //Be sure to match the correct 'name' to the corresponding state obj property
    )
}

-----------------------------------------------------------------------------------------------------------------------------------

Controlled Components:
- Ensuring that there is a single source of truth: State maintained in a component should be the single source of 
  truth
- Ensure that the react state is what drives what is visible on the site.

export default function Form()
{
    const [formData, setFormData] = React.useState()
    {
        firstName: "",
        lastName: "",
        email: "",
        comments: "",
        isFriendly: true,
        employment: "",
        favColor: ""

    }

    function handleChange(event){
        const {name, value, type, checked} = event.target //Destructuring the needed properties within target
        setFormData(prevFormData => {
            return(
                {
                    ...prevFormData,
                    [name]: type === "checkbox" ? checked : value
                }
                //If it is a checkbox, use the checked attribute within the JSX. Else use the value attribute.
                //Replacing the property to what was inserted in the input.
            )
        })
    }

    function handleSubmit(event) {
        event.preventDefault() //Keeps the page from refreshing and defaulting our form values.
        //submitToAPI(formData) //Will be able to send the data obj since it's been constantly updating
        console.log(formData)
    }

    return (
        <form onSubmit={handleSubmit}>
            <input 
                type = "text" 
                placeholder = "First Name" 
                onChange={handleChange} 
                name = "firstName"
                value={formData.firstName} 
                //Giving control to React so that it's react telling the html what to be.
            />

            <input 
                type = "text" 
                placeholder = "Last Name" 
                onChange={handleChange} 
                name = "lastName"
                value={formData.LastName} 
            />

            <input 
                type = "email" 
                placeholder = "Email" 
                onChange={handleChange} 
                name = "email"
                value={formData.email} 
            />

            <textarea
                placeholder = "Enter any additional Comments here"
                onChange = {handleChange}
                name = "comments"
                value={formData.comments}
            />

            <input 
                type = "checkbox"
                id = "isFriendly"
                checked = {formData.isFriendly}
                onChange = {handleChange}
                name = "isFriendly"

            />
            <label htmlFor="isFriendly">Are you friendly?</label>

            <fieldset>
                <input 
                    type="radio"
                    id="unemployed"
                    name="employment"
                    value="unemployed"
                    checked={formData.employment === "unemployed"}
                    onChange={handleChange}
                />
                <label htmlFor="unemployed">Unemployed</label>
                <br />
                <input 
                    type="radio"
                    id="part-time"
                    name="employment"
                    value="part-time"
                    checked={formData.employment === "part-time"}
                    onChange={handleChange}
                />
                <label htmlFor="part-time">Part-Time</label>
                <br />
                <input 
                    type="radio"
                    id="full-time"
                    name="employment"
                    value="full-time"
                    checked={formData.employment === "full-time"}
                    onChange={handleChange}
                />
                <label htmlFor="full-time">Full Time</label>
            </fieldset>

            <label htmlFor="favColor">What is your favorite color?</label>
            <br />
            <select 
                id="favColor"
                value={formData.favColor}
                onChange={handleChange}
                name="favColor"
            >
                <option value="">--Choose--</option>
                <option value="red">Red</option>
                <option value="green">Green</option>
                <option value="yellow">Yellow</option>
                <option value="orange">Orange</option>
            </select>
            <br />
            <br />
            <button>Submit</button>
        </form>
    )
}
-----------------------------------------------------------------------------------------------------------------------------------
Form Practice

export default function App() {
    const [formData, setFormData] = {
        email: "",
        password: "",
        confirm: "",
        joinNews: false
    }

    function handleSubmit(event){
        event.preventDefault();
        if(formData.password === formData.confirm)
        {
            console.log("Successfully signed up")
        }
        else
        {
            console.log("Passwords do not match")
            return
        }

        if(formData.joinNews)
        {
            console.log("Thank you for signing up")
        }

    }

    function handleChange(event){
        const {name, value, type, checked} = event.target
        setFormData(prevFormData => ({
            ...prevFormData,
            [name]: type === "checkbox" ? checked
        }))
    }

    return (
        <div>
            <form onSubmit={handleSubmit}>
                <input
                    type="email"
                    placeholder="Enter Email"
                    name="email"
                    value="formData.email"
                    onChange={handleChange}
                />
                <input
                    type="text"
                    placeholder="Enter Password"
                    name="password"
                    value="formData.password"
                    onChange={handleChange}
                />
                <input
                    type="email"
                    placeholder="Confirm Password"
                    name="confirm"
                    value="formData.confirm"
                    onChange={handleChange}
                />
                <input
                    type="checkbox"
                    name="joinNews"
                    checked={formData.joinNews}
                    id = "joinNews"
                    onChange={handleChange}
                />
                <label htmlFor="joinNews">I want to join the newsleter</label>

                <br />
                <br />
                <button>Submit</button>
            </form>
        </div>
    )
}